@import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;700&family=JetBrains+Mono:wght@400;600&display=swap");

:root {
  --bg: #04050a;
  --panel: #071024;
  --muted: #9aa4b2;
  --accent: #7c3aed;
  --accent-2: #00e5ff;
  --glass: rgba(255, 255, 255, 0.04);
  --neon: rgba(124, 58, 237, 0.12);
}

/* base reset */
* {
  box-sizing: border-box;
}
html,
body,
#root {
  height: 100%;
  margin: 0;
  background: var(--bg);
  color: #e6eef8;
  font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto;
}
a {
  color: inherit;
  text-decoration: none;
}
.app {
  min-height: 100vh;
}

/* HERO (coder) */
.hero {
  position: relative;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  padding: 36px;
}
.hero-bg-grid {
  position: absolute;
  inset: 0;
  background-image: linear-gradient(
      180deg,
      rgba(255, 255, 255, 0.02) 0.5px,
      transparent 0.5px
    ),
    linear-gradient(90deg, rgba(255, 255, 255, 0.02) 0.5px, transparent 0.5px);
  background-size: 24px 24px, 24px 24px;
  opacity: 0.06;
  transform-origin: center;
  will-change: transform;
  filter: blur(2px);
  z-index: 0;
}

/* subtle vignette */
.hero::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  background: radial-gradient(
      60% 60% at 20% 20%,
      rgba(124, 58, 237, 0.06),
      transparent 10%
    ),
    radial-gradient(
      60% 60% at 80% 80%,
      rgba(0, 229, 255, 0.03),
      transparent 10%
    );
  mix-blend-mode: overlay;
  z-index: 1;
}

/* layout */
.hero-inner {
  position: relative;
  width: 100%;
  max-width: 1200px;
  padding: 24px;
  display: flex;
  gap: 28px;
  align-items: center;
  justify-content: space-between;
  z-index: 3;
}
.hero-left {
  flex: 1;
  max-width: 56%;
}
.eyebrow {
  font-size: 12px;
  color: var(--muted);
  letter-spacing: 1.4px;
  margin-bottom: 12px;
}
.title {
  font-size: clamp(26px, 4.6vw, 44px);
  margin: 0 0 6px 0;
  line-height: 1.02;
  font-weight: 700;
}
.coder-title {
  font-family: "JetBrains Mono", ui-monospace, SFMono-Regular, Menlo, Monaco,
    monospace;
  font-weight: 600;
}
.accent {
  color: var(--accent);
  margin: 0 8px;
}
.code {
  color: var(--accent-2);
  font-family: "JetBrains Mono", monospace;
  font-weight: 600;
}

/* subtitle */
.subtitle {
  color: var(--muted);
  margin: 8px 0 20px 0;
  max-width: 58%;
}

/* terminal */
.terminal {
  margin: 18px 0 20px 0;
  width: 460px;
  max-width: 100%;
  background: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.01),
    rgba(255, 255, 255, 0.02)
  );
  border-radius: 10px;
  box-shadow: 0 8px 30px rgba(2, 6, 23, 0.6);
  border: 1px solid rgba(255, 255, 255, 0.03);
  overflow: hidden;
  font-family: "JetBrains Mono", monospace;
}
.term-top {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 8px 12px;
  background: linear-gradient(180deg, rgba(255, 255, 255, 0.01), transparent);
}
.dot {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  display: inline-block;
}
.dot.red {
  background: #ff5f56;
}
.dot.yellow {
  background: #ffbd2e;
}
.dot.green {
  background: #27c93f;
}
.term-title {
  margin-left: auto;
  font-size: 12px;
  color: var(--muted);
}
.term-body {
  padding: 12px;
}
.term-line {
  display: block;
  color: #9fb0c8;
}
.prompt {
  color: var(--accent-2);
  margin-right: 8px;
}
.typed {
  color: var(--accent);
  font-weight: 700;
}
.blink {
  opacity: 0.7;
  animation: blink 1s steps(2) infinite;
}
@keyframes blink {
  50% {
    opacity: 0;
  }
}

/* CTA */
.cta-row {
  display: flex;
  gap: 12px;
}
.btn {
  background: linear-gradient(90deg, var(--accent), #5b21b6);
  color: white;
  padding: 10px 16px;
  border-radius: 10px;
  display: inline-block;
  font-weight: 600;
  box-shadow: 0 8px 30px rgba(124, 58, 237, 0.12);
  border: none;
}
.btn-ghost {
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.04);
  color: var(--muted);
  padding: 10px 14px;
}

/* right column */
.hero-right {
  width: 520px;
  max-width: 44%;
  position: relative;
  height: 380px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* --- CHANGES: make canvas wrapper invisible and unstyled --- */
.canvas-wrap,
.canvas-wrap-coder {
  position: absolute;
  inset: 0;
  /* remove visual chrome */
  background: transparent !important;
  background-image: none !important;
  box-shadow: none !important;
  border: none !important;
  border-radius: 0 !important;
  overflow: visible !important;
  transition: transform 0.18s cubic-bezier(0.2, 0.9, 0.2, 1);
}

/* ensure the canvas itself is transparent and fills the area */
.canvas-wrap canvas,
.canvas-wrap-coder canvas {
  background: transparent !important;
  width: 100% !important;
  height: 100% !important;
  display: block;
}

/* hide the overlay cards so models are unobstructed */
.screen-overlay,
.code-cards,
.code-card {
  display: none !important;
}

/* remove the decorative border/pseudo elements if present */
.hero::before,
.hero-right::before,
.canvas-wrap::before,
.canvas-wrap-coder::before {
  display: none !important;
}

/* floating models wrapper (if used) — visually removed so models float freely */
.floating-models {
  position: fixed;
  right: clamp(18px, 6vw, 80px);
  bottom: clamp(18px, 6vh, 70px);
  width: clamp(300px, 34vw, 540px);
  height: clamp(220px, 28vh, 420px);
  z-index: 999;
  pointer-events: auto; /* change to 'none' if you want clicks to pass through */
  transform-origin: center;
  background: transparent !important;
  box-shadow: none !important;
  border-radius: 0 !important;
  overflow: visible;
}
.floating-models canvas {
  width: 100% !important;
  height: 100% !important;
  display: block;
  background: transparent !important;
}

/* overlay cards replacement: keep accessible links via buttons on left instead */

/* hero edge blend */
.hero-edge {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 110px;
  background: linear-gradient(0deg, var(--bg), rgba(4, 5, 10, 0));
  pointer-events: none;
}

/* sections */
.section {
  min-height: 60vh;
  padding: 80px 20px;
  max-width: 1100px;
  margin: 0 auto;
}
.section.alt {
  background: linear-gradient(180deg, rgba(255, 255, 255, 0.01), transparent);
}
.cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 16px;
  margin-top: 20px;
}
.card {
  background: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.01),
    rgba(255, 255, 255, 0.02)
  );
  border-radius: 12px;
  padding: 20px;
  min-height: 140px;
  box-shadow: 0 8px 30px rgba(2, 6, 23, 0.6);
}

@media (max-width: 900px) {
  /* hero-inner: left column takes available space; no right column expected */
  .hero-inner {
    position: relative;
    width: 100%;
    max-width: 1000px;
    padding: 24px;
    display: flex;
    gap: 28px;
    align-items: center;
    justify-content: flex-start; /* changed from space-between to avoid empty right gap */
    z-index: 3;
  }
  .hero-left {
    flex: 0 1 720px; /* ensures left column keeps a comfortable width */
    max-width: 720px;
  }

  .terminal {
    width: 100%;
  }
}

/* reduced motion */
@media (prefers-reduced-motion: reduce) {
  .canvas-wrap {
    transition: none !important;
  }
  .hero-bg-grid {
    transition: none !important;
  }
}

/* floating models — free on viewport, no background/chrome */
.floating-models {
  position: fixed;
  right: clamp(18px, 6vw, 80px);   /* adjust placement */
  bottom: clamp(18px, 6vh, 70px);  /* adjust placement */
  width: clamp(260px, 28vw, 520px);
  height: clamp(200px, 24vh, 420px);
  z-index: 999;
  pointer-events: auto; /* keep interactivity (OrbitControls). Set to 'none' to ignore clicks */
  background: transparent !important;
  box-shadow: none !important;
  border-radius: 0 !important;
  overflow: visible;
}

/* ensure canvas fills the wrapper and is transparent */
.floating-models canvas {
  width: 100% !important;
  height: 100% !important;
  display: block;
  background: transparent !important;
}
